{"version":3,"sources":["components/Book.js","components/BookList.js","components/UpcomingBooks.js","components/FavoriteIcon.js","components/DislikeIcon.js","App.js","api/index.js","serviceWorker.js","index.js"],"names":["Book","book","className","href","goodreads_link","target","size","hoverable","cover","src","image","alt","Meta","title","best_of","HeartFilled","style","color","marginRight","worst_of","DislikeFilled","description","author","year_published","BookList","books","map","idx","xs","sm","md","lg","UpcomingBooks","state","visible","showDrawer","setState","onClose","this","props","marginLeft","marginBottom","CalendarOutlined","type","onClick","padding","paddingLeft","lineHeight","height","fontSize","length","FrownOutlined","placement","closable","React","Component","FavoriteIcon","DislikeIcon","App","useState","setBooks","filteredBooks","setFilteredBooks","showFavorites","setShowFavorites","showDisliked","setShowDisliked","useEffect","fetch","then","response","json","reversed","reverse","years","Set","b","year","filter","y","isNaN","currentlyReading","find","upcoming","BookOutlined","subTitle","PushpinOutlined","hideXs","hideSm","hideMd","hideLg","marginTop","margin","booksInYear","orientation","display","alignItems","DoubleRightOutlined","fontWeight","Footer","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73486b3d.chunk.js","sourcesContent":["import React from \"react\";\nimport {Card} from 'antd';\nimport {HeartFilled, DislikeFilled} from '@ant-design/icons';\n\nconst Book = ({book}) => {\n  if (!book) return null;\n  return (\n      <div className=\"Book\">\n          <a href={book.goodreads_link} target=\"_blank\">\n            <Card\n                size=\"small\"\n                hoverable\n                cover={\n                  <img src={book.image} alt=\"Book cover\"/>\n                }\n            >\n              <Card.Meta\n                  title={\n                      <div>\n                          <span className=\"Book-icon\">\n                              {book.best_of === 'TRUE' && <HeartFilled style={{color: '#c60000', marginRight: 5}} />}\n                              {book.worst_of === 'TRUE' && <DislikeFilled style={{color: 'gray', marginRight: 5}} />}\n                          </span>\n                          {book.title}\n                      </div>\n                  }\n                  description={\n                    <>\n                      {/*<div>{book.series}</div>*/}\n                      <div className=\"Book-author\">{book.author}</div>\n                      <div className=\"Book-year\">{book.year_published}</div>\n                    </>\n                  }\n              />\n            </Card>\n          </a>\n      </div>\n  );\n};\n\nexport default Book;\n","import React from 'react';\nimport {Col} from 'antd';\nimport Book from './Book';\n\nconst BookList = ({books, className = ''}) => {\n  return (\n    books.map((book, idx) =>\n        <Col key={idx} xs={12} sm={8} md={6} lg={4} className={`BookList-item ${className}`} >\n          <div className=\"BookList-item-margin\">\n            <Book book={book} key={idx}/>\n          </div>\n        </Col>\n    )\n  );\n};\n\nexport default BookList;\n","import React from \"react\";\nimport { Drawer, Button, Row } from 'antd';\nimport BookList from \"./BookList\";\nimport {CalendarOutlined, FrownOutlined} from '@ant-design/icons';\n\nclass UpcomingBooks extends React.Component {\n  state = { visible: false };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { books } = this.props;\n\n    return (\n        <div>\n            <h4 style={{marginLeft: '5px', marginBottom: '0'}}>\n                <CalendarOutlined style={{marginRight: 5}} />Upcoming\n                <Button\n                    type=\"link\"\n                    onClick={this.showDrawer}\n                    style={{\n                        padding: '0',\n                        paddingLeft: '15px',\n                        lineHeight: 'inherit',\n                        height: 'inherit',\n                        fontSize: '12px'\n                    }}\n                >\n                    {books.length ? `View All (${books.length})` : null}\n                </Button>\n            </h4>\n          {\n            books.length ?\n                null :\n                <div style={{padding: 10}}>No upcoming books <FrownOutlined /></div>\n          }\n          <Drawer\n              title={`Upcoming Books (${books.length})`}\n              placement=\"bottom\"\n              closable\n              onClose={this.onClose}\n              visible={this.state.visible}\n              height={515}\n          >\n              <Row>\n                  <BookList books={books} />\n              </Row>\n          </Drawer>\n        </div>\n    );\n  }\n}\n\nexport default UpcomingBooks;\n","import React from \"react\";\nimport {HeartFilled} from \"@ant-design/icons\";\n\nconst FavoriteIcon = () => {\n  return (\n      <HeartFilled style={{color: '#c60000', marginRight: 5}} />\n  );\n};\n\nexport default FavoriteIcon;","import React from \"react\";\nimport {DislikeFilled} from \"@ant-design/icons\";\n\nconst DislikeIcon = () => {\n  return (\n      <DislikeFilled style={{color: 'gray', marginRight: 5}} />\n  );\n};\n\nexport default DislikeIcon;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Book from \"./components/Book\";\nimport BookList from \"./components/BookList\";\nimport UpcomingBooks from \"./components/UpcomingBooks\";\nimport * as api from './api';\nimport {PageHeader, Row, Col, Divider, Button, Layout} from 'antd';\nimport {BookOutlined, DoubleRightOutlined, PushpinOutlined} from '@ant-design/icons';\nimport FavoriteIcon from \"./components/FavoriteIcon\";\nimport DislikeIcon from \"./components/DislikeIcon\";\n\nconst App = () => {\n  const [books, setBooks] = useState([]);\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  const [showFavorites, setShowFavorites] = useState(false);\n  const [showDisliked, setShowDisliked] = useState(false);\n\n\n  useEffect(() => {\n    api.getBooks().then(books => {\n      const reversed = books.reverse();\n      setBooks(reversed);\n      setFilteredBooks(reversed);\n    });\n  }, []);\n\n  const toggleFavorites = () => {\n    if (!showFavorites) {\n      setFilteredBooks(books.filter(b => b.best_of === 'TRUE'));\n    } else {\n      setFilteredBooks(books);\n    }\n    setShowFavorites(!showFavorites);\n    setShowDisliked(false);\n  };\n  const toggleDisliked = () => {\n    if (!showDisliked) {\n      setFilteredBooks(books.filter(b => b.worst_of === 'TRUE'));\n    } else {\n      setFilteredBooks(books);\n    }\n    setShowDisliked(!showDisliked);\n    setShowFavorites(false);\n  };\n\n  const years = [...new Set(filteredBooks.map(b => b.year))].filter(y => !isNaN(y));\n\n  const currentlyReading = books.find(b => b.year === 'Currently Reading');\n  const upcoming = books.filter(b => b.year === 'Upcoming').reverse();\n\n  return (\n      <div className=\"App\">\n        <PageHeader\n            title={<><BookOutlined />  Book Club</>}\n            subTitle=\"Alive and kicking since 2015\"/>\n\n        {/* Reading Now */}\n        <h2 style={{marginLeft: '5px', marginBottom: '0'}}>\n          <PushpinOutlined style={{marginRight: 5}} />Reading Now\n        </h2>\n        <Row className=\"BookList\">\n            <BookList books={[currentlyReading]} className=\"BookList-item-current\"/>\n\n            {/* Upcoming Books */}\n            <Col xs={12} sm={16} md={18} lg={20}>\n                <UpcomingBooks books={upcoming} />\n                <Row className=\"upcoming-books\">\n                    {upcoming.map((book, idx) => {\n                        const hideXs = idx > 0, hideSm = idx > 1, hideMd = idx > 3, hideLg = idx > 5;\n                        return (\n                            <Col key={idx} xs={22} sm={10} md={6} lg={4}\n                                 className={`BookList-item BookList-item-current ${hideXs ? 'hideXs' : ''} ${hideSm ? 'hideSm' : ''} ${hideMd ? 'hideMd' : ''} ${hideLg ? 'hideLg' : ''}`}>\n                                <div className=\"BookList-item-margin\">\n                                    <Book book={book} key={idx}/>\n                                </div>\n                            </Col>\n                        )}\n                    )}\n                </Row>\n            </Col>\n        </Row>\n\n        {/* Filters */}\n        <div style={{marginTop: 20}}>\n            <Button style={{margin: 5}} onClick={toggleFavorites}><FavoriteIcon/> {showFavorites ? 'Show All' : 'Show Favorites'}</Button>\n            <Button style={{margin: 5}} onClick={toggleDisliked}><DislikeIcon/> {showDisliked ? 'Show All' : 'Show Disliked'}</Button>\n        </div>\n\n        {\n          years.map((year, idx) => {\n             const booksInYear = filteredBooks.filter(b => b.year === year);\n             return (\n                 <div key={idx}>\n                     <Divider orientation=\"left\">\n                       <span style={{display: 'inline-flex', alignItems: 'center'}}>\n                           <DoubleRightOutlined style={{marginRight: 5}} />\n                           <span style={{fontSize: 24}}>{year}</span>\n                       </span>\n                       <span style={{fontSize: 14, color: 'gray', fontWeight: 'normal', marginLeft: 10}}>{booksInYear.length} Books</span>\n                     </Divider>\n                     <Row className=\"BookList\">\n                        <BookList books={booksInYear}/>\n                     </Row>\n                </div>\n             );\n          })\n        }\n        <Layout.Footer style={{ textAlign: 'center' }}>Made by Maria Knabe<br />Using Ant Design and Sheet Best</Layout.Footer>\n      </div>\n  );\n};\n\nexport default App;\n","const sheetBestUrl = \"https://sheet.best/api/sheets/aa1f111c-28d5-4803-bf7f-64a3f2295352\";\n\nexport const getBooks = () => {\n  return fetch(sheetBestUrl)\n    .then((response) => {\n      return response.json();\n    });\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}